{
	"name": "copyPostsEveryday",
	"properties": {
		"description": "copy daily Posts parquet files from WCD's public blob storage container. ",
		"activities": [
			{
				"name": "Copy Posts",
				"description": "Copy posts from external azure blob storage",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Clean Folder Posts",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "ParquetSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true,
							"wildcardFileName": "*.parquet",
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "ParquetReadSettings"
						}
					},
					"sink": {
						"type": "ParquetSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						},
						"formatSettings": {
							"type": "ParquetWriteSettings"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "ds_parquet_posts_blob",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "ds_Parquet_load_posts_my_blob",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Clean Folder Posts",
				"description": "Delete Posts from posts folder",
				"type": "Delete",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [
					{
						"activity": "Archive",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "ds_Parquet_load_posts_my_blob",
						"type": "DatasetReference"
					},
					"logStorageSettings": {
						"linkedServiceName": {
							"referenceName": "ls_my_blob",
							"type": "LinkedServiceReference"
						},
						"path": "bd-project/Landing"
					},
					"enableLogging": true,
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					}
				}
			},
			{
				"name": "Run Ml Analysis",
				"description": "Run Ml Analysis",
				"type": "DatabricksNotebook",
				"dependsOn": [
					{
						"activity": "ForEach1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebookPath": "/Users/s439010829@st.uqu.edu.sa/ML Sentiment Analysis"
				},
				"linkedServiceName": {
					"referenceName": "ls_AzureDatabricks_ml_posts",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Archive",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "ParquetSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true,
							"wildcardFileName": "*.parquet",
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "ParquetReadSettings"
						}
					},
					"sink": {
						"type": "ParquetSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						},
						"formatSettings": {
							"type": "ParquetWriteSettings"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "ds_parquet_posts_blob",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "ds_archive",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Copy Posts",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@spilt(\"posts.parquet\", ',')",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Copy data1",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [
								{
									"name": "@item()"
								}
							],
							"typeProperties": {
								"source": {
									"type": "ParquetSource",
									"storeSettings": {
										"type": "AzureBlobStorageReadSettings",
										"recursive": true,
										"wildcardFileName": "*.parquet",
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "ParquetReadSettings"
									}
								},
								"sink": {
									"type": "ParquetSink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									},
									"formatSettings": {
										"type": "ParquetWriteSettings"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "ds_parquet_posts_blob",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "ds_archive",
									"type": "DatasetReference",
									"parameters": {
										"fileName": "@item()"
									}
								}
							]
						}
					]
				}
			}
		],
		"folder": {
			"name": "wcd-bd-project-pipelines"
		},
		"annotations": [],
		"lastPublishTime": "2024-05-23T08:56:25Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}